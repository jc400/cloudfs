version: '3.7'
services:
  nginx:
    image: nginx:1.17
    volumes:
      - type: bind
        source: ./nginx/nginx.conf
        target: /etc/nginx/conf.d/default.conf
    ports:
      - 8000:80
    depends_on:
      - backend-flask 
      - backend-express
      - frontend
      - db

  db:
    image: postgres
    volumes:
      - app-db-data:/var/lib/postgresql/data/pgdata
      - type: bind 
        source: ./postgres
        target: /opt
    environment:
      - PGDATA=/var/lib/postgresql/data/pgdata
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}

  backend-flask:
    build:
      context: backend-flask
      dockerfile: Dockerfile
    command: flask --debug --app app.wsgi run --port 5000 --host 0.0.0.0
    ports:
      - 5000:5000
    tty: true
    volumes:
      - type: bind
        source: ./backend-flask
        target: /app/
    environment:
      - PYTHONPATH=.
      - POSTGRES_DSN=${POSTGRES_DSN}
      - TEST_DB=${TEST_DB}
      - BACKEND_FLASK_SECRET=${BACKEND_FLASK_SECRET}

  backend-express:
    build:
      context: backend-express
      dockerfile: Dockerfile
    command: npm start 
    stdin_open: true
    ports:
      - 5001:5001
    volumes:
      - type: bind 
        source: ./backend-express
        target: /app
    environment:
      - NODE_ENV=development
      - PORT=5001
      - POSTGRES_DSN=${POSTGRES_DSN}
      - BACKEND_EXPRESS_SECRET=${BACKEND_EXPRESS_SECRET}
    depends_on:
      - db


  frontend:
    build:
      context: frontend
      dockerfile: Dockerfile
    command: npm start
    stdin_open: true
    ports:
      - 3000:3000
    volumes:
      - type: bind 
        source: ./frontend
        target: /app
    environment:
      - NODE_ENV=development


volumes:
  app-db-data: